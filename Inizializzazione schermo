import os
from sys import path as syspath
syspath.append(os.path.join(os.path.dirname(__file__), 'pygame'))
import pygame
import time
import math


pygame.init()
black = (0, 0, 0)
white = (255, 255, 255)
color = (255, 0, 0)
ampdiaframma = 1
lunghfocale = 1
dimsensore = 1
distmin = 0
x = 1366
y = 768
screen = pygame.display.set_mode((x, y))
pygame.display.set_caption("Show Text")
font = pygame.font.Font("freesansbold.ttf", 20)
changefont = pygame.font.Font("freesansbold.ttf", 16)
text = font.render("Start", True, white)
ampdiaframmatext = changefont.render("Ampiezza Diaframma: f/" + str(ampdiaframma),True, white)
lunghfocaletext = changefont.render("Lunghezza Focale: " + str(lunghfocale) + "mm",True, white)
dimsensoretext = changefont.render("Misura del Circolo di Confusione: " + str(dimsensore) + "mm",True, white)
distmintext = font.render("La distanza minima di messa a fuoco è: " + str(distmin) + "mm/" + str(distmin/10)+ "m",True, white)
distmintextRect = distmintext.get_rect()
distmintextRect.center = (x*0.487, y*0.729)
dimsensoretextRect = dimsensoretext.get_rect()
dimsensoretextRect.center = (x*0.487, y*0.521)
lunghfocaletextRect = lunghfocaletext.get_rect()
lunghfocaletextRect.center = (x*0.487, y*0.3125)
ampdiaframmatextRect = ampdiaframmatext.get_rect()
ampdiaframmatextRect.center = (x*0.487, y*0.104)
textRect = text.get_rect()
textRect.center = (x*0.487, y*0.5)
mouse_pos = pygame.mouse.get_pos()
inpututente = ""
backspacepressed = False
returnpressed = False
startpressed = False
changeampdiaframma = False
newampdiaframma = ""
newlunghfocale = ""
newdimsensore = ""
changelunghfocale = False
changedimsensore = False
visualizedef1 = False
visualizedef2 = False
visualizedef3 = False

def calcolo():                                                                          
    global ampdiaframma
    global dimsensore
    global lunghfocale
    global distmin
    distmin = round(((lunghfocale**2)/(ampdiaframma*dimsensore)), 3)
def controlloclick():
    global text
    global mouse_pos
    global startpressed
    global ampdiaframma
    global dimsensore
    global changeampdiaframma
    global changelunghfocale
    global changedimsensore
    global visualizedef1
    global visualizedef2
    global visualizedef3
    global def1text
    global def1Rect
    global def2Rect
    global def3Rect
    global ampdiaframmaRect
    global ampdiaframmaansRect
    global lunghfocaleRect
    global dimsensoreRect
    get_text()
    if pygame.mouse.get_pressed()[0] and textRect.collidepoint(mouse_pos):
        startpressed = True
        screen.fill(black)
    elif pygame.mouse.get_pressed()[0] and startpressed == False:
        time.sleep(0.000001)
    elif pygame.mouse.get_pressed()[0] and ampdiaframmaRect.collidepoint(mouse_pos):
        changeampdiaframma = True
    elif pygame.mouse.get_pressed()[0] and lunghfocaleRect.collidepoint(mouse_pos):
        changelunghfocale = True
    elif pygame.mouse.get_pressed()[0] and dimsensoreRect.collidepoint(mouse_pos):
        changedimsensore = True
    elif pygame.mouse.get_pressed()[0] and def1Rect.collidepoint(mouse_pos):
        visualizedef1 = True
    elif pygame.mouse.get_pressed()[0] and def2Rect.collidepoint(mouse_pos):
        visualizedef2 = True
    elif pygame.mouse.get_pressed()[0] and def3Rect.collidepoint(mouse_pos):
        visualizedef3 = True


def update():

    pygame.display.flip()
    controlloclick()
    calcolo()
    get_text()


def get_text():
    global x
    global y
    global ampdiaframma
    global lunghfocale
    global dimsensore
    global startpressed
    global color
    global changeampdiaframma
    global changelunghfocale
    global changedimsensore
    global visualizedef1
    global visualizedef2
    global visualizedef3
    global def1text
    global def1Rect
    global def2Rect
    global def3Rect
    global ampdiaframmaRect
    global ampdiaframmaansRect
    global newampdiaframma
    global lunghfocaleRect
    global lunghfocaleansRect
    global newlunghfocale
    global dimsensoreRect
    global dimsensoreansRect
    global newdimsensore
    global inpututente
    global backspacepressed
    global returnpressed
    ampdiaframmatext = changefont.render("Ampiezza Diaframma: f/" + str(ampdiaframma) , True, white)
    lunghfocaletext = changefont.render("Lunghezza Focale: " + str(lunghfocale) + "mm",True, white)
    dimsensoretext = changefont.render("Misura del Circolo di Confusione: " + str(dimsensore) + "mm",True, white)
    distmintext = font.render("La distanza minima di messa a fuoco è: " + str(round((distmin/1000),3)) + "m" ,True, white)
    if startpressed == False and changelunghfocale == False and changeampdiaframma == False and changedimsensore == False and visualizedef1 == False and visualizedef2 == False and visualizedef3 == False:
        screen.blit(text, textRect)
    elif startpressed == True and changelunghfocale == False and changeampdiaframma == False and changedimsensore == False and visualizedef1 == False and visualizedef2 == False and visualizedef3 == False:
        screen.blit(ampdiaframmatext, ampdiaframmatextRect)
        ampdiaframmaRect = pygame.draw.rect(screen, black, pygame.Rect(x*0.857, y*0.059, 120, 60))
        changetext = changefont.render("Cambia", True, white)
        changetextRect = changetext.get_rect()
        changetextRect.center = (x*0.9, y*0.104)
        def1Rect = pygame.draw.rect(screen, black, pygame.Rect(x*0.105, y*0.06,100, 60))
        deftext = changefont.render("Definizione", True, white)
        deftextRect = deftext.get_rect()
        deftextRect.center = (x*0.143,y*0.104)
        screen.blit(deftext, deftextRect)
        screen.blit(changetext, changetextRect)
        screen.blit(lunghfocaletext, lunghfocaletextRect)
        lunghfocaleRect = pygame.draw.rect(screen, black, pygame.Rect(x*0.857, y*0.275, 120, 60))
        changetext2 = changefont.render("Cambia", True, white)
        changetext2Rect = changetext2.get_rect()
        changetext2Rect.center = (x*0.9, y*0.3125)
        def2Rect = pygame.draw.rect(screen, black, pygame.Rect(x*0.105, y*0.275, 100, 60))
        deftext2 = changefont.render("Definizione", True, white)
        deftextRect2 = deftext2.get_rect()
        deftextRect2.center = (x*0.143,y*0.3125)
        screen.blit(deftext2, deftextRect2)
        screen.blit(changetext2, changetext2Rect)
        screen.blit(dimsensoretext, dimsensoretextRect)
        dimsensoreRect = pygame.draw.rect(screen, black, pygame.Rect(x*0.857, y*0.48, 120, 60))
        changetext3 = changefont.render("Cambia", True, white)
        changetext3Rect = changetext3.get_rect()
        changetext3Rect.center = (x*0.9, y*0.52)
        def3Rect = pygame.draw.rect(screen, black, pygame.Rect(x*0.105, y*0.478, 100, 60))
        deftext3 = changefont.render("Definizione", True, white)
        deftextRect3 = deftext3.get_rect()
        deftextRect3.center = (x*0.143,y*0.521)
        screen.blit(deftext3, deftextRect3)
        screen.blit(changetext3, changetext3Rect)
        screen.blit(distmintext, distmintextRect)
    elif changeampdiaframma == True:
        screen.fill(black)
        if backspacepressed == True:
            newampdiaframma = newampdiaframma[:-1]
            backspacepressed = False
        newampdiaframma = newampdiaframma + inpututente
        inpututente = ""
        ampdiaframmaans = changefont.render("Inserire nuova Ampiezza del Diaframma: f/" + str(newampdiaframma),True, white)
        ampdiaframmaansRect = ampdiaframmaans.get_rect()
        ampdiaframmaansRect.center = (x*0.5, y*0.5)
        screen.blit(ampdiaframmaans, ampdiaframmaansRect)
        if returnpressed == True:
            if newampdiaframma == "":
                ampdiaframma = 1
            else:
                ampdiaframma = float(newampdiaframma)
            changeampdiaframma = False
            returnpressed = False
            screen.fill(black)
    elif changelunghfocale == True:
        screen.fill(black)
        if backspacepressed == True:
            newlunghfocale = newlunghfocale[:-1]
            backspacepressed = False
        newlunghfocale = newlunghfocale + inpututente
        inpututente = ""
        lunghfocaleans = changefont.render("Inserire nuova Lunghezza Focale: " + str(newlunghfocale) + "mm",True, white)
        lunghfocaleansRect = lunghfocaleans.get_rect()
        lunghfocaleansRect.center = (x*0.5, y*0.5)
        screen.blit(lunghfocaleans, lunghfocaleansRect)
        if returnpressed == True:
            if newlunghfocale == "":
                lunghfocale = 0
            else:
                lunghfocale = float(newlunghfocale)
            changelunghfocale = False
            returnpressed = False
            screen.fill(black)
    elif changedimsensore == True:
        screen.fill(black)
        if backspacepressed == True:
            newdimsensore = newdimsensore[:-1]
            backspacepressed = False
        newdimsensore = newdimsensore + inpututente
        inpututente = ""
        dimsensoreans = changefont.render("Inserire nuovo Circolo di Confusione: " + str(newdimsensore) + "mm",True, white)
        dimsensoreansRect = dimsensoreans.get_rect()
        dimsensoreansRect.center = (x*0.5, y*0.5)
        screen.blit(dimsensoreans, dimsensoreansRect)
        if returnpressed == True:
            if newdimsensore == "":
                dimsensore = 1
            else:
                dimsensore = float(newdimsensore)
            changedimsensore = False
            returnpressed = False
            screen.fill(black)
    elif visualizedef1 == True:
        screen.fill(black)
        def1textpart1 = changefont.render("La lunghezza focale f è la distanza tra il piano centrale della lente sottile(o dello specchio) e il punto",True,white)
        def1textpart1Rect = def1textpart1.get_rect()
        def1textpart1Rect.center = (x*0.5, y*0.45)
        def1textpart2 = changefont.render("immagine assiale sul piano di focalizzazione, dei raggi paralleli emessi da un punto luce posto all\'infinito.",True, white)
        def1textpart2Rect = def1textpart2.get_rect()
        def1textpart2Rect.center = (x*0.5, y*0.5)
        screen.blit(def1textpart1, def1textpart1Rect)
        screen.blit(def1textpart2, def1textpart2Rect)
        if returnpressed == True:
            visualizedef1 = False
            returnpressed = False
            screen.fill(black)
    elif visualizedef2 == True:
        screen.fill(black)
        def2textpart1 = changefont.render("L’apertura del diaframma è un valore che indica l’ampiezza della sezione dell’obiettivo",True,white)
        def2textpart1Rect = def2textpart1.get_rect()
        def2textpart1Rect.center = (x*0.5, y*0.45)
        def2textpart2 = changefont.render("attraverso cui la luce potrà passare ed imprimere il sensore.",True, white)
        def2textpart2Rect = def2textpart2.get_rect()
        def2textpart2Rect.center = (x*0.5, y*0.5)
        screen.blit(def2textpart1, def2textpart1Rect)
        screen.blit(def2textpart2, def2textpart2Rect)
        if returnpressed == True:
            visualizedef2 = False
            returnpressed = False
            screen.fill(black)
    elif visualizedef3 == True:
        screen.fill(black)
        def3textpart1 = changefont.render("Il circolo di confusione è quel parametro che ci indica quale sia la soglia oltre la quale",True,white)
        def3textpart1Rect = def3textpart1.get_rect()
        def3textpart1Rect.center = (x*0.5, y*0.45)
        def3textpart2 = changefont.render("la sfocatura, in una fotografia, inizi ad essere percepibile ai nostri occhi",True, white)
        def3textpart2Rect = def3textpart2.get_rect()
        def3textpart2Rect.center = (x*0.5, y*0.5)
        screen.blit(def3textpart1, def3textpart1Rect)
        screen.blit(def3textpart2, def3textpart2Rect)
        if returnpressed == True:
            visualizedef3 = False
            returnpressed = False
            screen.fill(black)


while True:

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_0:
                inpututente = "0"
            elif event.key == pygame.K_1:
                inpututente = "1"
            elif event.key == pygame.K_2:
                inpututente = "2"
            elif event.key == pygame.K_3:
                inpututente = "3"
            elif event.key == pygame.K_4:
                inpututente = "4"
            elif event.key == pygame.K_5:
                inpututente = "5"
            elif event.key == pygame.K_6:
                inpututente = "6"
            elif event.key == pygame.K_7:
                inpututente = "7"
            elif event.key == pygame.K_8:
                inpututente = "8"
            elif event.key == pygame.K_9:
                inpututente = "9"
            elif event.key == pygame.K_PERIOD:
                inpututente = "."
            elif event.key == pygame.K_BACKSPACE:
                backspacepressed = True
            elif event.key == pygame.K_RETURN:
                returnpressed = True
        mouse_pos = pygame.mouse.get_pos()
        update()
